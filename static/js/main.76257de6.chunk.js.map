{"version":3,"sources":["reportWebVitals.js","assets/img/atul-vinayak-J8c1hkwrr-8-unsplash.jpg","App.js","components/BaseLayout/NavBar/index.js","components/BaseLayout/Footer/index.js","components/BaseLayout/index.js","components/PokemonContext/index.js","components/PokemonList/Pokemon/index.js","components/PokemonList/index.js","components/PokemonDetail/DetailPoke/index.js","index.js","components/PokemonDetail/index.js","components/MyPokemon/AllMyPokemon/index.js","components/MyPokemon/ThePokemon/index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","App","src","ImgBg","alt","className","to","index","Navbar","expand","Toggle","aria-controls","Collapse","id","Nav","this","props","children","PokemonContext","createContext","PokemonContextProvider","state","allPokes","total","initialURL","isLoaded","handleDelete","window","confirm","filter","c","setState","ownedTotal","length","handleAdd","nickName","thePoke","allPokesLength","data","Math","random","toString","substr","alert","localStorage","setItem","JSON","stringify","dataCart","parse","getItem","Provider","value","Component","data-testid","pokemon","sprites","front_default","width","name","getPokemon","url","Promise","resolve","reject","fetch","res","json","getAllPokemon","a","Index","pokeDetail","useState","styleDisplay","setStyleDisplay","btnDisplay","setbtnDisplay","moves","map","move","types","type","onClick","IsSuccess","ReactDOM","render","exact","path","component","context","useContext","pokemonData","setPokemonData","setLoading","useEffect","response","loadPokemon","results","fetchData","all","pokemonRecord","_pokemonData","setPokeDetail","URL","match","params","abortController","AbortController","signal","result","abort","Table","responsive","pkn","setThePoke","setNickName","prompt","document","getElementById"],"mappings":"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","file":"static/js/main.76257de6.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default __webpack_public_path__ + \"static/media/atul-vinayak-J8c1hkwrr-8-unsplash.c082143a.jpg\";","// Dependencies\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n// Internals\r\nimport ImgBg from 'assets/img/atul-vinayak-J8c1hkwrr-8-unsplash.jpg'\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div>\r\n      <img src={ImgBg} alt=\"BgImg\" className=\"imgBg\"></img>\r\n      <div className=\" pokeApp\">\r\n        <h1>Pokemon</h1>\r\n        <div>\r\n          <NavLink className=\"btn btn-outline-success\" to=\"/pokemonList\">Pokemon List</NavLink>\r\n        </div>\r\n        <div>\r\n          <NavLink className=\"btn btn-outline-success\" to=\"/allmypoke\">My Pokemon List</NavLink>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// Dependencies\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\n// Internals\r\nimport 'components/BaseLayout/NavBar/index.css'\r\n\r\nexport default function index() {\r\n    return (\r\n        <div className=\"Nav-Bar\">\r\n            <Navbar expand=\"lg\">\r\n                <NavLink className=\"navbar-brand\" to=\"/\">Pokemon</NavLink>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <NavLink className=\"nav-link\" to=\"/pokemonList\">Pokemon List</NavLink>\r\n                        <NavLink className=\"nav-link\" to=\"/allmypoke\">My Pokemon List</NavLink> \r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\n","// Dependencies\r\nimport React from 'react'\r\n// Internals\r\nimport 'components/BaseLayout/Footer/index.css'\r\n\r\nexport default function index() {\r\n    return (\r\n        <div className=\"foot text-center mt-5 mb-2\">\r\n            <footer>© Rizky Ramadika Trisaputra - 2020</footer>\r\n        </div>\r\n    )\r\n}\r\n","// Dependencies\r\nimport React from 'react'\r\n// Internals\r\nimport NavBar from 'components/BaseLayout/NavBar'\r\nimport Footer from 'components/BaseLayout/Footer'\r\n\r\nexport default function index() {\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            {this.props.children} \r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\n","import {createContext, Component} from \"react\"; \r\n\r\nexport const PokemonContext = createContext();\r\n\r\nclass PokemonContextProvider extends Component {\r\n    state = { \r\n        allPokes : [],\r\n        total: 0,\r\n        initialURL: \"https://pokeapi.co/api/v2/pokemon/\",\r\n        isLoaded: false,\r\n    }\r\n\r\n    handleDelete = id => {\r\n        if(window.confirm(\"Do you want to delete this pokemon?\")){\r\n            const allPokes = this.state.allPokes.filter(c => c.id !== id);\r\n            this.setState({allPokes: allPokes});\r\n            const allPokesLength = this.state.allPokes.length;\r\n            const ownedTotal = allPokesLength - 1;\r\n            this.setState({total : ownedTotal});\r\n        }\r\n    }\r\n\r\n    handleAdd = (nickName, thePoke) => {\r\n        const {allPokes} = this.state;\r\n        const allPokesLength = allPokes.length;\r\n        const ID = Math.random().toString(36).substr(2,9);\r\n        const data = [{\r\n            id: ID,\r\n            nickName: nickName,\r\n            thePoke: thePoke,\r\n        }]\r\n        this.setState({allPokes: [...allPokes,...data]})\r\n        const ownedTotal = allPokesLength + 1;\r\n        this.setState({total: ownedTotal})\r\n        alert('Successfully Added');\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        localStorage.setItem('dataPokemon', JSON.stringify(this.state.allPokes))\r\n        localStorage.setItem('dataTotal', JSON.stringify(this.state.total))\r\n    };\r\n\r\n    componentDidMount(){\r\n        const dataCart = JSON.parse(localStorage.getItem('dataPokemon'));\r\n        if(dataCart !== null){\r\n            this.setState({allPokes: dataCart});\r\n        }\r\n        const ownedTotal = JSON.parse(localStorage.getItem('dataTotal'));\r\n        if(ownedTotal !== null){\r\n            this.setState({total: ownedTotal});\r\n        }\r\n    }\r\n    \r\n    render() { \r\n        const {allPokes, total, initialURL, isLoaded} = this.state;\r\n        const {handleDelete, handleAdd} = this;\r\n\r\n        return ( \r\n            <PokemonContext.Provider value={{total, initialURL, isLoaded, allPokes, handleDelete, handleAdd}}>\r\n                {this.props.children}\r\n            </PokemonContext.Provider>\r\n         );\r\n    }\r\n}\r\n \r\nexport default PokemonContextProvider;","// Dependencies\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n// Internals\r\nimport 'components/PokemonList/Pokemon/index.css'\r\n\r\nexport default function index(props) {\r\n    return (\r\n        <div className=\"onePokemon d-flex justify-content-center\">\r\n                <div className=\"card border-1 mr-5 w-75 mb-2\">\r\n                <NavLink data-testid=\"id\" to={`/detail/${props.pokemon.id}`}>\r\n                    <div className=\"card-body\">\r\n                        <img data-testid=\"img\" src={props.pokemon.sprites.front_default} alt=\"pokeImg\" width={100}></img>\r\n                        <h5 className=\"card-title text-center\" data-testid=\"pokemon\">{props.pokemon.name}</h5>\r\n                        {/* <p className=\"card-title badge badge-light\">Owned Total : {props.pokemon.base_experience}</p> */}\r\n                    </div>\r\n                </NavLink>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n","// Dependencies\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { PokemonContext } from 'components/PokemonContext';\r\n// Internals \r\nimport 'components/PokemonList/index.css'\r\nimport Pokemon from 'components/PokemonList/Pokemon'\r\n\r\nexport default function Index() {\r\n    const context = useContext(PokemonContext)\r\n\r\n    const [pokemonData, setPokemonData] = useState([])\r\n    const [isLoaded, setLoading] = useState(context.isLoaded);\r\n  \r\n    useEffect(() => {\r\n      async function fetchData() {\r\n        let response = await getAllPokemon(context.initialURL)\r\n        await loadPokemon(response.results);\r\n        setLoading(true);\r\n      }\r\n      fetchData();\r\n    })\r\n  \r\n    const loadPokemon = async (data) => {\r\n      let _pokemonData = await Promise.all(data.map(async pokemon => {\r\n        let pokemonRecord = await getPokemon(pokemon)\r\n        return pokemonRecord\r\n      }))\r\n      setPokemonData(_pokemonData); \r\n    } \r\n\r\n    if(!isLoaded){\r\n        return <div><h1 className=\"text-center pt-5\">Loading...</h1></div>\r\n    }else{\r\n        return (\r\n                <div className=\"ListPoke mt-3\">\r\n                    <h1 className=\"text-center\">Pokemon List</h1>\r\n                    <h6 className=\"text-center mb-4\">Total Owned <span className=\"badge badge-success\"> {context.total}</span></h6>\r\n                    {pokemonData.map(pokemon => \r\n                    <Pokemon key={pokemon.id} pokemon={pokemon} total={context.total}/>)}\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport function getPokemon({ url }) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url).then(res => res.json())\r\n            .then(data => {\r\n                resolve(data)\r\n            })\r\n    });\r\n}\r\n\r\nexport async function getAllPokemon(url) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url).then(res => res.json())\r\n            .then(data => {\r\n                resolve(data)\r\n            })\r\n    });\r\n}","// Dependencies\r\nimport React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n// Internals\r\nimport 'components/PokemonDetail/DetailPoke/index.css'\r\n\r\nexport default function Index({pokeDetail}) {\r\n    const [styleDisplay, setStyleDisplay] = useState('d-none');\r\n    const [btnDisplay, setbtnDisplay] = useState('btn btn-danger');\r\n\r\n    const IsSuccess = () => {\r\n        const probability = Math.random() < 0.5;\r\n        let className = \"btn btn-outline-success \";\r\n        if(probability === true ){\r\n            className +=  \"d-block\";\r\n            const btnClass = \"d-none\";\r\n            setStyleDisplay(className)\r\n            setbtnDisplay(btnClass)\r\n            alert('Successfully Caught');\r\n        }else{\r\n            className +=  \"d-none\";\r\n            setStyleDisplay(className)\r\n            alert('Failed');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container DetPoke\">  \r\n            <div className=\"row mt-5\">\r\n                <div className=\"col mr-5 DetPoke-1\">\r\n                    <img data-testid=\"imgPoke\" src={pokeDetail.sprites.front_default} alt=\"thePoke\" width={150}></img>\r\n                </div>\r\n                <div className=\"col DetPokeCol-2\">\r\n                    <span className=\"badge badge-success m-2\">Names</span>\r\n                    <h3 className=\"text-left\" data-testid=\"nameDetail\">{pokeDetail.name}</h3>\r\n                    <span className=\"badge badge-success m-2\">Moves</span>\r\n                    <ul>\r\n                        {pokeDetail.moves.map(move=>\r\n                            <li>\r\n                                {move.move.name}\r\n                            </li>)}\r\n                    </ul>\r\n                    <span className=\"badge badge-success m-2\">Types</span>\r\n                    {pokeDetail.types.map(type=>\r\n                        <div className=\"badge\">\r\n                            {type.type.name}\r\n                        </div>)}\r\n                </div>\r\n            </div>\r\n            <div className=\"row d-flex justify-content-center mt-5\">\r\n                <button onClick={() => IsSuccess()} className={btnDisplay}>Catch</button>\r\n                <NavLink data-testid=\"idDetail\" className={styleDisplay} to={`/thePokemon/${pokeDetail.id}`}>Get It</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","// Dependencies\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\r\n\r\n// Internals\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\n\r\nimport App from 'App';\r\nimport BaseLayout from 'components/BaseLayout'\r\nimport PokemonList from 'components/PokemonList'\r\nimport PokemonDetail from 'components/PokemonDetail'\r\nimport ThePokemon from 'components/MyPokemon/ThePokemon'\r\nimport AllMyPokemon from 'components/MyPokemon/AllMyPokemon'\r\nimport PokemonContextProvider from 'components/PokemonContext'\r\n\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={App}></Route>\r\n      <BaseLayout>\r\n        <PokemonContextProvider>\r\n          <Route path=\"/pokemonList\" component={PokemonList}></Route>\r\n          <Route path=\"/detail/:id\" component={PokemonDetail}></Route>\r\n          <Route path=\"/allmypoke\" component={AllMyPokemon}></Route>\r\n          <Route path=\"/thePokemon/:id\" component={ThePokemon}></Route>\r\n        </PokemonContextProvider>\r\n      </BaseLayout>\r\n    </Switch>\r\n  </Router>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// Dependencies\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { PokemonContext } from 'components/PokemonContext';\r\n// Internals\r\nimport 'components/PokemonDetail/index.css'\r\nimport DetailPoke from 'components/PokemonDetail/DetailPoke'\r\n\r\nexport default function Index(props) {\r\n    const context = useContext(PokemonContext)\r\n\r\n    const [pokeDetail, setPokeDetail] = useState([]);\r\n    const [isLoaded, setLoading] = useState(context.isLoaded);\r\n    const URL = context.initialURL+props.match.params.id\r\n\r\n    useEffect(() => {\r\n        const abortController = new AbortController();\r\n        const signal = abortController.signal;\r\n        fetch(URL, {signal: signal})\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                setPokeDetail(result);\r\n                setLoading(true);\r\n            }\r\n        );\r\n        \r\n        return function cleanup(){\r\n            abortController.abort();\r\n        }\r\n    })\r\n\r\n    if(!isLoaded){\r\n        return <div><h1 className=\"text-center pt-5\">Loading...</h1></div>\r\n    }else{\r\n        return (\r\n            <div className=\"container PokeDet\">\r\n                <h1 className=\"text-center\">Pokemon Detail</h1>\r\n                <DetailPoke pokeDetail={pokeDetail} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","// Dependencies\r\nimport React, { useContext } from 'react';\r\nimport Table from 'react-bootstrap/Table'\r\nimport { PokemonContext } from 'components/PokemonContext';\r\n// Internals\r\nimport 'components/MyPokemon/AllMyPokemon/index.css'\r\n\r\nexport default function Index() {\r\n    const context = useContext(PokemonContext)\r\n\r\n    return (\r\n        <div className=\"allPoke container\">\r\n            <h1 className=\"mb-5 text-center\">My Pokemon List</h1> \r\n            <Table responsive=\"sm\">\r\n                <thead>\r\n                <tr>\r\n                    <th className=\"pl-4\">Nickname</th>\r\n                    <th>Pokemon</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    context.allPokes.map(pkn =>\r\n                        <tr>\r\n                            <td className=\"pl-4\" data-testid=\"nickname\"><span className=\"badge badge-light\">{pkn.nickName}</span></td>\r\n                            <td className=\"text-capitalize\" data-testid=\"thePoke\"><span className=\"badge badge-light\">{pkn.thePoke}</span></td>\r\n                            <td><button onClick={() => context.handleDelete(pkn.id)} className=\"btn btn-danger btn-sm\">Delete</button></td>\r\n                        </tr>)\r\n                }\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\n","// Dependencies\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\nimport { PokemonContext } from 'components/PokemonContext';\r\n// Internals\r\nimport 'components/MyPokemon/ThePokemon/index.css'\r\n\r\nexport default function Index(props) {\r\n    const context = useContext(PokemonContext)\r\n\r\n    const [thePoke, setThePoke] = useState([]);\r\n    const [nickName, setNickName] = useState('');\r\n    const URL = context.initialURL+props.match.params.id;\r\n    \r\n    useEffect(() => {\r\n        const abortController = new AbortController();\r\n        const signal = abortController.signal;\r\n        fetch(URL, {signal: signal})\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                setThePoke(result);\r\n            }\r\n        );\r\n        \r\n        return function cleanup(){\r\n            abortController.abort();\r\n        }\r\n    })\r\n\r\n    if(!nickName){\r\n        var resultnickName = prompt('Please Enter the NickName','');\r\n        return setNickName(resultnickName);\r\n    }else{\r\n        return (\r\n            <div className=\" container thePoke\">\r\n                <h1 className=\"mb-4 text-center\">You Get It!</h1>\r\n                <div className=\"thePokenNick\">\r\n                    <span className=\"badge badge-success m-2\">NickName</span>\r\n                    <h4 className=\"text-left\" data-testid=\"nick\">{nickName}</h4>\r\n                    <span className=\"badge badge-success m-2\">Pokemon</span>\r\n                    <h3 className=\"text-left\" data-testid=\"pokename\">{thePoke.name}</h3>\r\n                    <NavLink to=\"/allmypoke\"><button onClick={() => context.handleAdd(nickName,thePoke.name)} className=\"btn btn btn-outline-success btn-sm mt-3\">Add</button></NavLink>\r\n                </div>\r\n                <h6 className=\"ml-2 my-5\"><b>Notes:</b> Click <span className=\"badge badge-success\"> Add </span> to add your pokemon to <b>My Pokemon List</b></h6>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"],"sourceRoot":""}